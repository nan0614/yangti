// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package foodinfo

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
)

// FoodInfoABI is the input ABI used to generate the binding from.
const FoodInfoABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"address\"}],\"name\":\"setRRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"traceNumber\",\"type\":\"string\"},{\"name\":\"traceName\",\"type\":\"string\"},{\"name\":\"quality\",\"type\":\"int256\"},{\"name\":\"timestamp\",\"type\":\"string\"}],\"name\":\"newFood\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetDRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"traceNumber\",\"type\":\"string\"},{\"name\":\"traceName\",\"type\":\"string\"},{\"name\":\"quality\",\"type\":\"int256\"},{\"name\":\"timestamp\",\"type\":\"string\"}],\"name\":\"addTraceInfoByDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetRRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"address\"}],\"name\":\"setPRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"traceNumber\",\"type\":\"string\"}],\"name\":\"getTraceInfoByTraceNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"address\"}],\"name\":\"setDRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetPRRole\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"traceNumber\",\"type\":\"string\"},{\"name\":\"traceName\",\"type\":\"string\"},{\"name\":\"quality\",\"type\":\"int256\"},{\"name\":\"timestamp\",\"type\":\"string\"}],\"name\":\"addTraceInfoByRetailer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"producer\",\"type\":\"address\"},{\"name\":\"distribution\",\"type\":\"address\"},{\"name\":\"retailer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"

// FoodInfoBin is the compiled bytecode used for deploying new contracts.
var FoodInfoBin = ""

// DeployFoodInfo deploys a new contract, binding an instance of FoodInfo to it.
func DeployFoodInfo(auth *bind.TransactOpts, backend bind.ContractBackend, producer common.Address, distribution common.Address, retailer common.Address) (common.Address, *types.Transaction, *FoodInfo, error) {
	parsed, err := abi.JSON(strings.NewReader(FoodInfoABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(FoodInfoBin), backend, producer, distribution, retailer)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FoodInfo{FoodInfoCaller: FoodInfoCaller{contract: contract}, FoodInfoTransactor: FoodInfoTransactor{contract: contract}, FoodInfoFilterer: FoodInfoFilterer{contract: contract}}, nil
}

func AsyncDeployFoodInfo(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend, producer common.Address, distribution common.Address, retailer common.Address) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(FoodInfoABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(FoodInfoBin), backend, producer, distribution, retailer)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// FoodInfo is an auto generated Go binding around a Solidity contract.
type FoodInfo struct {
	FoodInfoCaller     // Read-only binding to the contract
	FoodInfoTransactor // Write-only binding to the contract
	FoodInfoFilterer   // Log filterer for contract events
}

// FoodInfoCaller is an auto generated read-only Go binding around a Solidity contract.
type FoodInfoCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FoodInfoTransactor is an auto generated write-only Go binding around a Solidity contract.
type FoodInfoTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FoodInfoFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type FoodInfoFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FoodInfoSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type FoodInfoSession struct {
	Contract     *FoodInfo         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FoodInfoCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type FoodInfoCallerSession struct {
	Contract *FoodInfoCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// FoodInfoTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type FoodInfoTransactorSession struct {
	Contract     *FoodInfoTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// FoodInfoRaw is an auto generated low-level Go binding around a Solidity contract.
type FoodInfoRaw struct {
	Contract *FoodInfo // Generic contract binding to access the raw methods on
}

// FoodInfoCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type FoodInfoCallerRaw struct {
	Contract *FoodInfoCaller // Generic read-only contract binding to access the raw methods on
}

// FoodInfoTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type FoodInfoTransactorRaw struct {
	Contract *FoodInfoTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFoodInfo creates a new instance of FoodInfo, bound to a specific deployed contract.
func NewFoodInfo(address common.Address, backend bind.ContractBackend) (*FoodInfo, error) {
	contract, err := bindFoodInfo(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FoodInfo{FoodInfoCaller: FoodInfoCaller{contract: contract}, FoodInfoTransactor: FoodInfoTransactor{contract: contract}, FoodInfoFilterer: FoodInfoFilterer{contract: contract}}, nil
}

// NewFoodInfoCaller creates a new read-only instance of FoodInfo, bound to a specific deployed contract.
func NewFoodInfoCaller(address common.Address, caller bind.ContractCaller) (*FoodInfoCaller, error) {
	contract, err := bindFoodInfo(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FoodInfoCaller{contract: contract}, nil
}

// NewFoodInfoTransactor creates a new write-only instance of FoodInfo, bound to a specific deployed contract.
func NewFoodInfoTransactor(address common.Address, transactor bind.ContractTransactor) (*FoodInfoTransactor, error) {
	contract, err := bindFoodInfo(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FoodInfoTransactor{contract: contract}, nil
}

// NewFoodInfoFilterer creates a new log filterer instance of FoodInfo, bound to a specific deployed contract.
func NewFoodInfoFilterer(address common.Address, filterer bind.ContractFilterer) (*FoodInfoFilterer, error) {
	contract, err := bindFoodInfo(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FoodInfoFilterer{contract: contract}, nil
}

// bindFoodInfo binds a generic wrapper to an already deployed contract.
func bindFoodInfo(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FoodInfoABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FoodInfo *FoodInfoRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _FoodInfo.Contract.FoodInfoCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FoodInfo *FoodInfoRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.FoodInfoTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FoodInfo *FoodInfoRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.FoodInfoTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FoodInfo *FoodInfoCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _FoodInfo.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FoodInfo *FoodInfoTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FoodInfo *FoodInfoTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.contract.Transact(opts, method, params...)
}

// GetTraceInfoByTraceNumber is a free data retrieval call binding the contract method 0x58781c26.
//
// Solidity: function getTraceInfoByTraceNumber(string traceNumber) constant returns(string[], int256[], int256[], string[])
func (_FoodInfo *FoodInfoCaller) GetTraceInfoByTraceNumber(opts *bind.CallOpts, traceNumber string) ([]string, []*big.Int, []*big.Int, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]*big.Int)
		ret2 = new([]*big.Int)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _FoodInfo.contract.Call(opts, out, "getTraceInfoByTraceNumber", traceNumber)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetTraceInfoByTraceNumber is a free data retrieval call binding the contract method 0x58781c26.
//
// Solidity: function getTraceInfoByTraceNumber(string traceNumber) constant returns(string[], int256[], int256[], string[])
func (_FoodInfo *FoodInfoSession) GetTraceInfoByTraceNumber(traceNumber string) ([]string, []*big.Int, []*big.Int, []string, error) {
	return _FoodInfo.Contract.GetTraceInfoByTraceNumber(&_FoodInfo.CallOpts, traceNumber)
}

// GetTraceInfoByTraceNumber is a free data retrieval call binding the contract method 0x58781c26.
//
// Solidity: function getTraceInfoByTraceNumber(string traceNumber) constant returns(string[], int256[], int256[], string[])
func (_FoodInfo *FoodInfoCallerSession) GetTraceInfoByTraceNumber(traceNumber string) ([]string, []*big.Int, []*big.Int, []string, error) {
	return _FoodInfo.Contract.GetTraceInfoByTraceNumber(&_FoodInfo.CallOpts, traceNumber)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x31f3d07b.
//
// Solidity: function addTraceInfoByDistributor(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactor) AddTraceInfoByDistributor(opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "addTraceInfoByDistributor", traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactor) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "addTraceInfoByDistributor", traceNumber, traceName, quality, timestamp)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x31f3d07b.
//
// Solidity: function addTraceInfoByDistributor(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoSession) AddTraceInfoByDistributor(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.AddTraceInfoByDistributor(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoSession) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncAddTraceInfoByDistributor(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// AddTraceInfoByDistributor is a paid mutator transaction binding the contract method 0x31f3d07b.
//
// Solidity: function addTraceInfoByDistributor(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactorSession) AddTraceInfoByDistributor(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.AddTraceInfoByDistributor(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncAddTraceInfoByDistributor(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncAddTraceInfoByDistributor(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0xffd9a1fa.
//
// Solidity: function addTraceInfoByRetailer(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactor) AddTraceInfoByRetailer(opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "addTraceInfoByRetailer", traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactor) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "addTraceInfoByRetailer", traceNumber, traceName, quality, timestamp)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0xffd9a1fa.
//
// Solidity: function addTraceInfoByRetailer(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoSession) AddTraceInfoByRetailer(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.AddTraceInfoByRetailer(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoSession) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncAddTraceInfoByRetailer(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// AddTraceInfoByRetailer is a paid mutator transaction binding the contract method 0xffd9a1fa.
//
// Solidity: function addTraceInfoByRetailer(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactorSession) AddTraceInfoByRetailer(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.AddTraceInfoByRetailer(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncAddTraceInfoByRetailer(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncAddTraceInfoByRetailer(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// NewFood is a paid mutator transaction binding the contract method 0x0cdca7a2.
//
// Solidity: function newFood(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactor) NewFood(opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "newFood", traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactor) AsyncNewFood(handler func(*types.Receipt, error), opts *bind.TransactOpts, traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "newFood", traceNumber, traceName, quality, timestamp)
}

// NewFood is a paid mutator transaction binding the contract method 0x0cdca7a2.
//
// Solidity: function newFood(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoSession) NewFood(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.NewFood(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoSession) AsyncNewFood(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncNewFood(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// NewFood is a paid mutator transaction binding the contract method 0x0cdca7a2.
//
// Solidity: function newFood(string traceNumber, string traceName, int256 quality, string timestamp) returns()
func (_FoodInfo *FoodInfoTransactorSession) NewFood(traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.NewFood(&_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncNewFood(handler func(*types.Receipt, error), traceNumber string, traceName string, quality *big.Int, timestamp string) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncNewFood(handler, &_FoodInfo.TransactOpts, traceNumber, traceName, quality, timestamp)
}

// ResetDRRole is a paid mutator transaction binding the contract method 0x2615cf4b.
//
// Solidity: function resetDRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactor) ResetDRRole(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "resetDRRole")
}

func (_FoodInfo *FoodInfoTransactor) AsyncResetDRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "resetDRRole")
}

// ResetDRRole is a paid mutator transaction binding the contract method 0x2615cf4b.
//
// Solidity: function resetDRRole() returns(int256)
func (_FoodInfo *FoodInfoSession) ResetDRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetDRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoSession) AsyncResetDRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetDRRole(handler, &_FoodInfo.TransactOpts)
}

// ResetDRRole is a paid mutator transaction binding the contract method 0x2615cf4b.
//
// Solidity: function resetDRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) ResetDRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetDRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncResetDRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetDRRole(handler, &_FoodInfo.TransactOpts)
}

// ResetPRRole is a paid mutator transaction binding the contract method 0x9ac82ab3.
//
// Solidity: function resetPRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactor) ResetPRRole(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "resetPRRole")
}

func (_FoodInfo *FoodInfoTransactor) AsyncResetPRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "resetPRRole")
}

// ResetPRRole is a paid mutator transaction binding the contract method 0x9ac82ab3.
//
// Solidity: function resetPRRole() returns(int256)
func (_FoodInfo *FoodInfoSession) ResetPRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetPRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoSession) AsyncResetPRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetPRRole(handler, &_FoodInfo.TransactOpts)
}

// ResetPRRole is a paid mutator transaction binding the contract method 0x9ac82ab3.
//
// Solidity: function resetPRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) ResetPRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetPRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncResetPRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetPRRole(handler, &_FoodInfo.TransactOpts)
}

// ResetRRRole is a paid mutator transaction binding the contract method 0x401bf357.
//
// Solidity: function resetRRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactor) ResetRRRole(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "resetRRRole")
}

func (_FoodInfo *FoodInfoTransactor) AsyncResetRRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "resetRRRole")
}

// ResetRRRole is a paid mutator transaction binding the contract method 0x401bf357.
//
// Solidity: function resetRRRole() returns(int256)
func (_FoodInfo *FoodInfoSession) ResetRRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetRRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoSession) AsyncResetRRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetRRRole(handler, &_FoodInfo.TransactOpts)
}

// ResetRRRole is a paid mutator transaction binding the contract method 0x401bf357.
//
// Solidity: function resetRRRole() returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) ResetRRRole() (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.ResetRRRole(&_FoodInfo.TransactOpts)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncResetRRRole(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncResetRRRole(handler, &_FoodInfo.TransactOpts)
}

// SetDRRole is a paid mutator transaction binding the contract method 0x7b4334c5.
//
// Solidity: function setDRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactor) SetDRRole(opts *bind.TransactOpts, amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "setDRRole", amount)
}

func (_FoodInfo *FoodInfoTransactor) AsyncSetDRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts, amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "setDRRole", amount)
}

// SetDRRole is a paid mutator transaction binding the contract method 0x7b4334c5.
//
// Solidity: function setDRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoSession) SetDRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetDRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoSession) AsyncSetDRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetDRRole(handler, &_FoodInfo.TransactOpts, amount)
}

// SetDRRole is a paid mutator transaction binding the contract method 0x7b4334c5.
//
// Solidity: function setDRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) SetDRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetDRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncSetDRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetDRRole(handler, &_FoodInfo.TransactOpts, amount)
}

// SetPRRole is a paid mutator transaction binding the contract method 0x52fd0c27.
//
// Solidity: function setPRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactor) SetPRRole(opts *bind.TransactOpts, amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "setPRRole", amount)
}

func (_FoodInfo *FoodInfoTransactor) AsyncSetPRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts, amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "setPRRole", amount)
}

// SetPRRole is a paid mutator transaction binding the contract method 0x52fd0c27.
//
// Solidity: function setPRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoSession) SetPRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetPRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoSession) AsyncSetPRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetPRRole(handler, &_FoodInfo.TransactOpts, amount)
}

// SetPRRole is a paid mutator transaction binding the contract method 0x52fd0c27.
//
// Solidity: function setPRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) SetPRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetPRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncSetPRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetPRRole(handler, &_FoodInfo.TransactOpts, amount)
}

// SetRRRole is a paid mutator transaction binding the contract method 0x0176c3a4.
//
// Solidity: function setRRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactor) SetRRRole(opts *bind.TransactOpts, amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.contract.Transact(opts, "setRRRole", amount)
}

func (_FoodInfo *FoodInfoTransactor) AsyncSetRRRole(handler func(*types.Receipt, error), opts *bind.TransactOpts, amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.contract.AsyncTransact(opts, handler, "setRRRole", amount)
}

// SetRRRole is a paid mutator transaction binding the contract method 0x0176c3a4.
//
// Solidity: function setRRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoSession) SetRRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetRRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoSession) AsyncSetRRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetRRRole(handler, &_FoodInfo.TransactOpts, amount)
}

// SetRRRole is a paid mutator transaction binding the contract method 0x0176c3a4.
//
// Solidity: function setRRRole(address amount) returns(int256)
func (_FoodInfo *FoodInfoTransactorSession) SetRRRole(amount common.Address) (*types.Transaction, *types.Receipt, error) {
	return _FoodInfo.Contract.SetRRRole(&_FoodInfo.TransactOpts, amount)
}

func (_FoodInfo *FoodInfoTransactorSession) AsyncSetRRRole(handler func(*types.Receipt, error), amount common.Address) (*types.Transaction, error) {
	return _FoodInfo.Contract.AsyncSetRRRole(handler, &_FoodInfo.TransactOpts, amount)
}
